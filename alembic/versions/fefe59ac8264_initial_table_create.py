"""Initial Table Create

Revision ID: fefe59ac8264
Revises: 
Create Date: 2025-09-16 19:51:42.211210

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'fefe59ac8264'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('frcevent',
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('event_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('short_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('event_key')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('team_number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teamrecord',
    sa.Column('team_number', sa.Integer(), nullable=False),
    sa.Column('team_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rookieYear', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('team_number')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('datavalidation',
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('match_number', sa.Integer(), nullable=False),
    sa.Column('match_level', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('validation_status', sa.Enum('PENDING', 'NEEDS_REVIEW', 'VALID', name='validationstatus'), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.ForeignKeyConstraint(['event_key'], ['frcevent.event_key'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('event_key', 'match_number', 'match_level', 'user_id', 'organization_id')
    )
    op.create_table('matchdata2025',
    sa.Column('team_number', sa.Integer(), nullable=False),
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('match_number', sa.Integer(), nullable=False),
    sa.Column('match_level', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('al4c', sa.Integer(), nullable=False),
    sa.Column('al3c', sa.Integer(), nullable=False),
    sa.Column('al2c', sa.Integer(), nullable=False),
    sa.Column('al1c', sa.Integer(), nullable=False),
    sa.Column('tl4c', sa.Integer(), nullable=False),
    sa.Column('tl3c', sa.Integer(), nullable=False),
    sa.Column('tl2c', sa.Integer(), nullable=False),
    sa.Column('tl1c', sa.Integer(), nullable=False),
    sa.Column('aNet', sa.Integer(), nullable=False),
    sa.Column('tNet', sa.Integer(), nullable=False),
    sa.Column('aProcessor', sa.Integer(), nullable=False),
    sa.Column('tProcessor', sa.Integer(), nullable=False),
    sa.Column('endgame', sa.Enum('NONE', 'PARK', 'SHALLOW', 'DEEP', name='endgame2025'), nullable=False),
    sa.ForeignKeyConstraint(['event_key'], ['frcevent.event_key'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['team_number'], ['teamrecord.team_number'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('team_number', 'event_key', 'match_number', 'match_level', 'user_id')
    )
    op.create_table('matchschedule',
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('match_number', sa.Integer(), nullable=False),
    sa.Column('match_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('red1_id', sa.Integer(), nullable=False),
    sa.Column('red2_id', sa.Integer(), nullable=False),
    sa.Column('red3_id', sa.Integer(), nullable=False),
    sa.Column('blue1_id', sa.Integer(), nullable=False),
    sa.Column('blue2_id', sa.Integer(), nullable=False),
    sa.Column('blue3_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['blue1_id'], ['teamrecord.team_number'], ),
    sa.ForeignKeyConstraint(['blue2_id'], ['teamrecord.team_number'], ),
    sa.ForeignKeyConstraint(['blue3_id'], ['teamrecord.team_number'], ),
    sa.ForeignKeyConstraint(['event_key'], ['frcevent.event_key'], ),
    sa.ForeignKeyConstraint(['red1_id'], ['teamrecord.team_number'], ),
    sa.ForeignKeyConstraint(['red2_id'], ['teamrecord.team_number'], ),
    sa.ForeignKeyConstraint(['red3_id'], ['teamrecord.team_number'], ),
    sa.PrimaryKeyConstraint('event_key', 'match_number', 'match_level')
    )
    op.create_table('organizationevent',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('public_data', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['event_key'], ['frcevent.event_key'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizationfeaturesettings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('data_validation', sa.Boolean(), nullable=False),
    sa.Column('match_video', sa.Boolean(), nullable=False),
    sa.Column('robot_pictures', sa.Boolean(), nullable=False),
    sa.Column('scout_schedule', sa.Boolean(), nullable=False),
    sa.Column('picklist', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id')
    )
    op.create_table('roboteventimagelink',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('team_number', sa.Integer(), nullable=False),
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(length=2048), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_key'], ['frcevent.event_key'], ),
    sa.ForeignKeyConstraint(['team_number'], ['teamrecord.team_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roboteventimagelink_id'), 'roboteventimagelink', ['id'], unique=False)
    op.create_table('tbamatchdata2025',
    sa.Column('team_number', sa.Integer(), nullable=False),
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('match_number', sa.Integer(), nullable=False),
    sa.Column('match_level', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('alliance', sa.Enum('RED', 'BLUE', name='alliance'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('al4c', sa.Integer(), nullable=False),
    sa.Column('al3c', sa.Integer(), nullable=False),
    sa.Column('al2c', sa.Integer(), nullable=False),
    sa.Column('al1c', sa.Integer(), nullable=False),
    sa.Column('tl4c', sa.Integer(), nullable=False),
    sa.Column('tl3c', sa.Integer(), nullable=False),
    sa.Column('tl2c', sa.Integer(), nullable=False),
    sa.Column('tl1c', sa.Integer(), nullable=False),
    sa.Column('aNet', sa.Integer(), nullable=False),
    sa.Column('tNet', sa.Integer(), nullable=False),
    sa.Column('aProcessor', sa.Integer(), nullable=False),
    sa.Column('tProcessor', sa.Integer(), nullable=False),
    sa.Column('endgame', sa.Enum('NONE', 'PARK', 'SHALLOW', 'DEEP', name='endgame2025'), nullable=False),
    sa.ForeignKeyConstraint(['event_key'], ['frcevent.event_key'], ),
    sa.ForeignKeyConstraint(['team_number'], ['teamrecord.team_number'], ),
    sa.PrimaryKeyConstraint('team_number', 'event_key', 'match_number', 'match_level')
    )
    op.create_table('teamevent',
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('team_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_key'], ['frcevent.event_key'], ),
    sa.ForeignKeyConstraint(['team_number'], ['teamrecord.team_number'], ),
    sa.PrimaryKeyConstraint('event_key', 'team_number')
    )
    op.create_table('userorganization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'LEAD', 'MEMBER', 'GUEST', 'PENDING', name='userrole'), nullable=False),
    sa.Column('joined', sa.DateTime(), nullable=False),
    sa.Column('event_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['event_key'], ['frcevent.event_key'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userorganization')
    op.drop_table('teamevent')
    op.drop_table('tbamatchdata2025')
    op.drop_index(op.f('ix_roboteventimagelink_id'), table_name='roboteventimagelink')
    op.drop_table('roboteventimagelink')
    op.drop_table('organizationfeaturesettings')
    op.drop_table('organizationevent')
    op.drop_table('matchschedule')
    op.drop_table('matchdata2025')
    op.drop_table('datavalidation')
    op.drop_table('users')
    op.drop_table('teamrecord')
    op.drop_table('organization')
    op.drop_table('frcevent')
    # ### end Alembic commands ###
